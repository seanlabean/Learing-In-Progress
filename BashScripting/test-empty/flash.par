# ==================================================================
# Simulation/SimulationMain, monitors/Logfile/LogfileMain, IO/IOMain
# ==================================================================
basenm          = "turbsph_"
log_file        = "turbsph.log"
run_comment     = "Turbulent sphere"
output_directory= "./test-empty" # "/projects/0/flashrad/sean/M4V02_u1_restart"


# ==============================
# Simulation/SimulationMain/Cube
# ==============================

#sim_cubeFile         = ""
sim_cubeFile        ="./cubefiles/M4V02_R07" # "./cubefiles/M5V02B"
#sim_cubeFile        ="./cube128"
#sim_cubeFile        ="./M3V02B/cubeM3V02B" # "./cubefile"
#sim_cubeFile        ="./M4V02B/cubeM4V02B" # "./cubefile"
#sim_cubeFile        ="./M5V02B/cubeM5V02B" # "./cubefile"

# ionised gas fraction
sim_init_Hp = 1e-4
sim_tdust   = 18.0 # ISM 6.0 # dust initial temperature

sim_A_n                   =  1.2784 #-1.0
sim_A_i                   =  0.6698 #-1.0

#initial magnetic field
bx0 = 0.0e0
by0 = 0.0e0
bz0 = 3.0e-6


# ===================
# physics/Eos/EosMain
# ===================
gamma = 1.66666666666666667
# don't double count this mu! its in dust cooling also -JW
#eos_singleSpeciesA  = 2.0


# =============
# Grid/GridMain
# =============

# Computational domain
# For Sean's 10^3 cloud
xmax  	     	=  2.6999e+19 # 8.75 pc
xmin		= -2.6999e+19
ymax		=  2.6999e+19
ymin		= -2.6999e+19
zmax		=  2.6999e+19
zmin		= -2.6999e+19

# For the 10^3 cloud
#xmax            =  2.1602e+19 # 7 pc 1.5428388e+19 #10.0 pc #3.0856776e+19 # extend one side to get 239861 blks 1.5428388e+19 # (-5pc,5pc)^3
#xmin            = -2.1602e+19 #-1.5428388e+19 #3.0856776e+19
#ymax            =  2.1602e+19
#ymin            = -2.1602e+19
#zmax            =  2.1602e+19
#zmin            = -2.1602e+19

# For the 10^4 cloud
#xmax            =  3.7032e+19 #12.0 pc  #1.5428388e+19 #3.0856776e+19 # extend one side to get 239861 blks 1.5428388e+19 # (-5pc,5pc)^3
#xmin            = -3.7032e+19 #3.0856776e+19
#ymax            =  3.7032e+19
#ymin            = -3.7032e+19
#zmax            =  3.7032e+19
#zmin            = -3.7032e+19

# For the 10^5 cloud
#xmax            =  1.6973e+20 #55.0 pc  #1.5428388e+19 #3.0856776e+19 # extend one side to get 239861 blks 1.5428388e+19 # (-5pc,5pc)^3
#xmin            = -1.6973e+20 #3.0856776e+19
#ymax            =  1.6973e+20
#ymin            = -1.6973e+20
#zmax            =  1.6973e+20
#zmin            = -1.6973e+20

# remember to update grav boundaries if you change this
xl_boundary_type      = "outflow" #"diode"
xr_boundary_type      = "outflow" #"diode"
yl_boundary_type      = "outflow" #"diode"
yr_boundary_type      = "outflow" #"diode"
zl_boundary_type      = "outflow" #"diode"
zr_boundary_type      = "outflow" #"diode"

# --------------------------------
# Grid/GridMain/paramesh/paramesh4
# --------------------------------
nblockx         = 1
nblocky         = 1
nblockz         = 1
lrefine_max     = 10  # 2
lrefine_min     = 4  # 2
refine_var_1 = "none"
refine_var_2 = "none"

#refine_var_1    = "pres"
#refine_filter_1 = 1e-2
## Note a factor of 2 in difference gives 0.97087
## A factor of 3 is just above 0.98
#refine_cutoff_1 = 0.98
#derefine_cutoff_1 = 0.6  # fairly aggressive

#   maximum change of refinements per step
#nrefs = 2
#converttoconsvdformeshcalls = .true.
#converttoconsvdinmeshinterp = .true.
#interpol_order = 2

gr_sanitizeDataMode  = 3 # Try to correct "bad data"
gr_sanitizeVerbosity = 4 # Just print warning, not cell info


# ==================================================
# simulation time, output file intervals, restarting
# Driver/DriverMain, IO/IOMain
# ==================================================
restart         = .true. # .false.
nend            = 999999999
tmax            = 6.3113852e14 # 20 Myr
dtinit          = 3.15e8
dtmin           = 3.15e7
dtmax           = 3.15e12
dr_shortenLastStepBeforeTMax = .true.
tstep_change_factor = 2.0

wall_clock_checkpoint       = 0.432e+05
wall_clock_time_limit       = 1.0e99
checkpointFileNumber        = 13
checkpointFileIntervalStep  = 0
checkpointFileIntervalTime  = 3.1556926e12 #0.1 Myr #3.1556926e13 # 1 Myr
plotFileNumber              = 118
plotFileIntervalStep        = 0
plotFileIntervalTime        = 3.1556926e11 #10 kyr #3.1556926e12 # 0.1 Myr
particleFileNumber          = 118
particleFileIntervalStep    = 0
particleFileIntervalTime    = 3.1556926e11 #10 kyr # 3.1556926e12 # 0.1 Myr

# Time step limiting for positive definiteness
# New in FLASH4.5, see Sec 7.1.5.1 of Flash User's Guide
dr_usePosdefComputeDt   = .true.
dr_numPosdefVars        = 4
dr_posdefDtFactor       = 0.9
dr_posdefVar_1          = "ener"
dr_posdefVar_2          = "eint"
dr_posdefVar_3          = "dens"
dr_posdefVar_4          = "pres"

# variables in plotfile
plot_var_1 = "dens"
plot_var_2 = "pres"
plot_var_3 = "temp"
plot_var_4 = "velx"
plot_var_5 = "vely"
plot_var_6 = "velz"
plot_var_7 = "ihp"
plot_var_8 = "iha"
plot_var_9 = "eint"
plot_var_10 = "ener"
plot_var_11 = "tdus"
plot_var_12 = "magx"
plot_var_13 = "magy"
plot_var_14 = "magz"
plot_var_15 = "uvfl"
plot_var_16 = "fufl"
plot_var_17 = "magp"
plot_var_18 = "gpot"
plot_var_19 = "bgpt"


# ============
# Hydro solver
# ============

useHydro       = T

cfl		= 0.8
eintSwitch      = 1.e-4
killdivb    = T
UnitSystem  = "CGS"

# field variable limits
smallt = 1.0d-99
smallp = 1.3807e-19 # P at n_H=1e-4 and T=10 K 1.0d-99 #1e-30 1.e-99
smallu = 1.0d-99
smallx = 1.0d-99
smalle = 1.0d-99 #1.24015e9 # E per particle per gram at 1e-4 and T=10 K #1.0d-99
smlrho = 1.67e-28 # floor at 1e-4 n_H #1.0d-99 #1e-30from smallp=1e-20 and Tmin=10 K 1.e-99

# ----------------
# split/ppm solver
# ----------------
#igodu   = 0
#iplm    = 0
#nriem   = 10

## -------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE UNSPLIT STAGGERED MESH MHD SOLVER  ##
#	I. INTERPOLATION SCHEME:

#############
## Important! If you use USM, you MUST use hydrocomputedtoption = -1 (the default)
## Otherwise the USM solver will compute the dt during the hydro step
## which ignores any changes that happen in between hydro steps!
#############
hydrocomputedtoption = -1

order		    = 3       # Data reconstruction order[1st(1st order Godunov),2nd(MUSCL-Hancock),3rd(PPM),5th(WENO)]
slopeLimiter    = "minmod" # Slope limiters (minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.      # Slope parameter for the "limited" slope by Toro
charLimiting	= .true.  # Characteristic limiting vs. Primitive limiting

use_avisc	    = .true.  # use artificial viscosity (originally for PPM)
cvisc		    = 0.1     # coefficient for artificial viscosity
use_flattening	= .false. # use flattening (dissipative) (originally for PPM)
use_steepening	= .false. # use contact steepening (originally for PPM)
use_upwindTVD	= .true.  #use upwind biased TVD slope for PPM (need nguard=6)
use_gravhalfupdate = .false. # This would violate the bridge stuff, no?

#hy_fallbackLowerCFL = .true.
#hy_cflFallbackFactor = 0.25
#use_hybridOrder = .true.

#	II. MAGNETIC(B) AND ELECTRIC(E) FIELDS:
E_modification	= .true.           # High order algorithm for E-field construction
E_upwind        = .true.           # Better E field reconstruction (Lee and Deane 2009)
energyFix	    = .true.           # Update magnetic energy using staggered B-fields
ForceHydroLimit	= .false.          # Pure Hydro Limit (B=0)
prolMethod      = "balsara_prol" #"injection_prol" # Prolongation method (injecton_prol, balsara_prol)
#useMagneticResistivity = .true.
#resistivity = 7.3e-14 # Spitzer resistivity for T = 10^4 K #1.0E-0

#	III. RIEMANN SOLVERS:
RiemannSolver	= "HLLC"      # Roe, HLL, HLLC, HLLD, LLF, Marquina
entropy         = .false.     # Entropy fix for the Roe solver
EOSforRiemann	= .false.     # Call EOS in Riemann flux calculations

#	IV. STRONG SHOCK HANDELING SCHEME:
shockDetect	= .false.     # Shock Detect for numerical stability
## -------------------------------------------------------------##

## ---------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE SUPER-TIME-STEPPING (STS) ALGORITHM  ##
##  NOTE: For details on using STS runtime parameters, please     ##
##        refer to user's guide (Driver chapter).                 ##
useSTS                  = .false.
nstepTotalSTS           = 5
nuSTS                   = 0.2
## ---------------------------------------------------------------##


# =======================
# Particles/ParticlesMain
# =======================
useParticles        = T
useSinkParticles    = .true.

# maximum number of total particles, not just rays
pt_maxPerProc   = 10000

# --------------------------------------------
# Particles/ParticlesMain/active/SinkNoAdvance
# --------------------------------------------

jeans_ncells_ref    = 6.0 #12.0  #20.0 #32.0
jeans_ncells_deref  = 12.0 #24.0  #40.0 #64.0

# For -+7pc box with lrefine=2, demonstration problem
#sink_density_thresh       = 8.52171362932e-22
#sink_accretion_radius     = 3.3753125e+18
#sink_softening_radius     = 3.3753125e+18
# For -+7pc box
#sink_density_thresh       = 2.47685070948e-21 # 7pc 4.85564e-21 # 10 pc box # 3.47202e-22 # 50 pc box #5.24209e-21 #1.0e-18
#sink_accretion_radius     = 1.68765625e+18 # 7 pc 1.205e18 #for 10 pc box # 6.02734e18 # for 50 pc box 7.5333925e+16 # 2.5 x grid cell size #2.1096e17 # 7 cell radius for winds  #
#sink_softening_radius     = 1.68765625e+18 #1.205e18 # 6.02734e18 #7.5333925e+16 # 2.5 x grid cell size #2.1096e17 # to guarantee refinement. #
# For -+12 pc box
#sink_density_thresh       = 8.42817255308e-22 
#sink_accretion_radius     = 2.893125e+18
#sink_softening_radius     = 2.893125e+18
#For -+55 pc box
#sink_density_thresh       = 4.01208875254e-23
#sink_accretion_radius     = 8.2865871e+17 # 1.326015625e+19
#sink_softening_radius     = 8.2865871e+17 # 1.326015625e+19

#---------------------------------------------
# Sean's Runs: 
#---------------------------------------------
#1e5 mass in -+55pc box lrefinemax=10
#sink_density_thresh	  = 6.85915168e-21
#sink_accretion_radius	  = 1.035823e+17 #2.5 cells at refmax 10 #4.1432935e+17 #2.5 cells at refmax 8 # 8.286587e+17 # 2.5 cells at refmax 7
#sink_softening_radius	  = 1.035823e+17 #2.5 cells at refmax 10 #4.1432935e+17 #2.5 cells at refmax 8 # 8.286587e+17 # 2.5 cells at refmax 7

#1e3 mass in -+8.75pc box lrefinemax=10
sink_density_thresh   	  = 4.3334001e-20 # e-18 is for 40 max ref cell jeans length
sink_accretion_radius	  = 1.657752e+16 # 2.5 cells at refmax 10
sink_softening_radius	  = 1.657752e+16

sink_softening_type_gas   = "spline" #"linear"
sink_softening_type_sinks = "spline"
sink_integrator           = "leapfrog"
sink_subdt_factor         = 0.01
sink_dt_factor            = 0.5
sink_merging              = .true. #.false.
sink_maxSinks             = 1000
sink_convergingFlowCheck  = .true.
sink_potentialMinCheck    = .true.
sink_jeansCheck           = .true.
sink_negativeEtotCheck    = .true. 
sink_GasAccretionChecks   = .true.


# =============================================
# Gravity
#
# Grid/GridSolvers/BHTree/Wunsch
# physics/Gravity/GravityMain/Poisson/BHTree
# physics/Gravity/GravityMain/Poisson/Multigrid
# =============================================

useGravity      = T #F
updateGravity   = .true.

# remember to update grid boundary conditions if you change this
grav_boundary_type      = "isolated"
# different x,y,z BCs for BHTree only
grav_boundary_type_x    = "isolated"
grav_boundary_type_y    = "isolated"
grav_boundary_type_z    = "isolated"

# ----------------
# Multigrid solver
# ----------------
mpole_lmax = 10
mg_maxresidualnorm = 1e-6
mg_printNorm       = .false.

## -------------
## BHTree solver
## -------------
## grid solver
#gr_bhPhysMACTW           = .true. # These two should always be true,
#gr_bhPhysMACComm         = .true. # means gravity unit uses the gravity opening criterion
#gr_bhTreeLimAngle        = 0.5    # when Grav walks the tree. - JW
#gr_bhTreeSafeBox         = 1.2
## WARNING! Using unified tree walk results in LARGE errors
## # after a refinement! - JW
#gr_bhUseUnifiedTW        = .false. ###### MAKE IT FALSE! .true.
#gr_bhTWMaxQueueSize      = 10000
#
## Here's the fastest from Wunsch's paper. 
## gravity
#grv_bhNewton            = -1.0
#grv_bhMAC               = "ApproxPartialErr" #"MaxPartialErr"
#grv_bhMPDegree          = 2
#grv_bhUseRelAccErr      = .false.
#grv_bhAccErr            = 1e-2
## gravity, Ewald field
#grv_bhEwaldAlwaysGenerate = .true.
#grv_bhEwaldSeriesN        = 10
## Wunsch's paper, Sec 2.2.5 "second approach"
#grv_bhEwaldFName          = "ewald_field"
#grv_bhEwaldNPer           = 32
### Wunsch's paper, Sec 2.2.5 "first approach", toggled by setup variable
##grv_bhEwaldFNameAccV42    = "ewald_field_V42"
##grv_bhEwaldFieldNxV42     = 64
##grv_bhEwaldFieldNyV42     = 64
##grv_bhEwaldFieldNzV42     = 64
##grv_bhEwaldNRefV42        = -1
##grv_bhLinearInterpolOnlyV42 = .true.


# ===================================================
# heating and cooling
#
# physics/sourceTerms/Heat/HeatMain/HeatCool/phenHeat
# physics/sourceTerms/Heat/HeatMain/HeatCool/phenHeat/mol_and_dust
# physics/sourceTerms/Heat/HeatMain/HeatCool/phenHeat/mol_and_dust/solver
# ===================================================

useHeat        = T #F

he_abundM = 0.0
he_metal  = 4.
#he_abundM = 0.1  # 0.1 for solar
#he_metal = 4.21676774992 # mu, solar metallicity gas, Taken from Cloudy.

# multiplier in front of cooling time, smaller means earlier switch to explicit dt > tcool
# if subcyclecool is true, otherwise it means earlier switch to implicit dt < tcool
subfactor       = 0.3 #0.1d0
he_int_method   = "Implicit" #"Euler"

# photoelectric heating only [ergs]
# this is for G_0 = 1.7, epsilon = 0.05 x 1e-24 ergs (from Hill et al 2012)
#statheat = 1e-27 # Value from Goldsmith 2001, which might be a bit high. #3.2044e-28 # value from Galli and Padovani 2015 #8.5E-26
#peheat   = 8.5E-26
he_pe_recipe    = "WD01"
he_pe_norm      = 1.3e-24
#he_pe_recipe    = "NOGF"
#he_pe_norm      = 1e-24

# heating and cooling thresholds
# at which temperatures to apply heating
theatmin        = 0.0E0
theatmax        = 2.0E4

# at which temperatures to apply cooling
tradmin         = 10.0 # 0.0 # tradmin=0 will BREAK heat/cooling solver - 2019 Feb 26 AT
tradmax         = 1.E15 # so always

# absolute thresholds never goes below or above these temperatures
absTmin = 10.
absTmax = 1e9

# electron number densities at which to apply cooling
dradmin   = 0.0 #1e-8
dradmax   = 1e10

# heat in exponential profile or uniformely
stratifyHeat = .false.
# scale height for uv heating [cm] default is 300 pc
h_uv      = 9.25703274e20

# Background FUV in Habing units (Draine field is 1.69).
Gzero = 1.69e0

#///////////////////////////
## All new CR stuff by Josh
## To use the old uniform heating, just set crIonNH and crIonExp = 1.0
## See Galli and Padovani 2015
## Note from table 4
## Obs  |  CR rate  |  Exp
## W98  |  2.0e-17  |  0.021
## M02  |  6.8e-16  |  0.423
##
## Final Note : I only implemented the power law form, as the exponential
## formula needs column densities greater than 10^25 N_H that I never see.
## There, I warned you! - JW
##///////////////////////////
use_cr_heating = .true.

## W98
crIonRate      = 2.0e-17
crIonExp       = 0.021

## M02
#crIonRate      = 6.8e-16
#crIonExp       = 0.423e0

crIonNH        = 1e20    # Lower limit of column density.
crIonEnergy    = 20.0e0  # Average energy per proton CR.

#///////////////////
#   molecular + dust cooling
#///////////////////

useDustCool = .true. #
T_cool_min  = 10.0 #Neufeld goes down to 10.
nd_cool_min = 1e1 #2.7355645e4 #density range for dust and molecular cooling
nd_cool_max = 1e10
# Use the sputtering temperature to turn off heating instead of
# he_theatmax?
dust_sputter_temp = 3e5 # See fig 25.4 in Draine's book


# ================================================
# radiative transfer options
#
# physics/RadTrans/RadTransMain
# physics/RadTrans/RadTransMain/RayRad
# Particles/ParticlesMain/ray_pe/MultiSourceSimple
# ================================================

# two switches, if ionisation state has to be calculated
# without radiation from point sources
useRadTrans    = T
rt_rayTrace    = T

# NOTE: useRadTrans and useRadTransfer do distinct things
useRadTransfer = T

rt_maxHchange = 0.1

ph_sampling     = 2.0
ph_initHPlevel  = 2
ph_inBlockSplit = T
ph_rotRays      = T
ph_maxNRays     = 1000000 #300000
ph_raysToBundle = 5
ph_CommCheckInterval = 20
ph_radPressure  = T

early_term_FUV  = T
sigDust         = 1e-21 # Cross section of dust per hydrogen nulcei, from Draine review 2011
dust_gas_ratio  = 0.01  # 1% dust
ph_EUVonDust    = T     # Should EUV (E > 13.6 eV) photons be allowed to interact with dust?


# ======================================================================================
# wind options
#
# Particles/ParticlesMain/active/SinkNoAdvance/Couple_AMUSE/wind
# Particles/ParticlesMain/active/SinkNoAdvance/Couple_AMUSE/Couple_AMUSE_Sinks_and_Stars
# ======================================================================================

# This should be large enough
# that the wind bubble is 'resolved'
# I find 3.5*sqrt(3)*dx is good (about 5 cells),
# which is the default if this is set to -1.0. - JW
ref_radius = -1.0 #1.8268e17

# Min injection radius.
min_radius = 0.0

# Which quantity to conserve, energy or momentum.
# NOTE! Currently I've fixed momentum to also conserve
# energy via inelastic collisions, so use that! - JW
cons_quant = "momentum"
# Minimum mass at which to switch on winds. Probably should
# match the radiation min mass.
min_wind_mass = 1.3923e34 # 7 solar masses # 1.5912e34 # 8 solar masses.
# Mass loading. If on, set a target temperature for the gas.
# This will be used to set the velocity which will lead to that
# shock temperature in the hot wind.
mass_load  = .true.
var_radius = .false. 
wind_target_temp = 5e6

# Perturb the wind velocity by a normal distribution?
perturb_velocity = .false. #.true. #
perturb_std_dev  = 0.05
